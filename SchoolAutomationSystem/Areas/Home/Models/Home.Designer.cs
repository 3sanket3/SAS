//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("HomeModel", "FK_Login_Login", "Login", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SchoolAutomationSystem.Areas.Home.Models.Login), "Login1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SchoolAutomationSystem.Areas.Home.Models.Login), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_SecurityQuestion_Id", "SecurityQuestion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SchoolAutomationSystem.Areas.Home.Models.SecurityQuestion), "SecurityQuestion1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SchoolAutomationSystem.Areas.Home.Models.SecurityQuestion), true)]

#endregion

namespace SchoolAutomationSystem.Areas.Home.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class HomeEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new HomeEntities object using the connection string found in the 'HomeEntities' section of the application configuration file.
        /// </summary>
        public HomeEntities() : base("name=HomeEntities", "HomeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HomeEntities object.
        /// </summary>
        public HomeEntities(string connectionString) : base(connectionString, "HomeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HomeEntities object.
        /// </summary>
        public HomeEntities(EntityConnection connection) : base(connection, "HomeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Login> Logins
        {
            get
            {
                if ((_Logins == null))
                {
                    _Logins = base.CreateObjectSet<Login>("Logins");
                }
                return _Logins;
            }
        }
        private ObjectSet<Login> _Logins;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SecurityQuestion> SecurityQuestions
        {
            get
            {
                if ((_SecurityQuestions == null))
                {
                    _SecurityQuestions = base.CreateObjectSet<SecurityQuestion>("SecurityQuestions");
                }
                return _SecurityQuestions;
            }
        }
        private ObjectSet<SecurityQuestion> _SecurityQuestions;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Logins EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogins(Login login)
        {
            base.AddObject("Logins", login);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SecurityQuestions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSecurityQuestions(SecurityQuestion securityQuestion)
        {
            base.AddObject("SecurityQuestions", securityQuestion);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeModel", Name="Login")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Login : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Login object.
        /// </summary>
        /// <param name="login_Id">Initial value of the Login_Id property.</param>
        public static Login CreateLogin(global::System.Decimal login_Id)
        {
            Login login = new Login();
            login.Login_Id = login_Id;
            return login;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Login_Id
        {
            get
            {
                return _Login_Id;
            }
            set
            {
                if (_Login_Id != value)
                {
                    OnLogin_IdChanging(value);
                    ReportPropertyChanging("Login_Id");
                    _Login_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Login_Id");
                    OnLogin_IdChanged();
                }
            }
        }
        private global::System.Decimal _Login_Id;
        partial void OnLogin_IdChanging(global::System.Decimal value);
        partial void OnLogin_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Security_Question_Id
        {
            get
            {
                return _Security_Question_Id;
            }
            set
            {
                OnSecurity_Question_IdChanging(value);
                ReportPropertyChanging("Security_Question_Id");
                _Security_Question_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Security_Question_Id");
                OnSecurity_Question_IdChanged();
            }
        }
        private Nullable<global::System.Decimal> _Security_Question_Id;
        partial void OnSecurity_Question_IdChanging(Nullable<global::System.Decimal> value);
        partial void OnSecurity_Question_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Security_Ans
        {
            get
            {
                return _Security_Ans;
            }
            set
            {
                OnSecurity_AnsChanging(value);
                ReportPropertyChanging("Security_Ans");
                _Security_Ans = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Security_Ans");
                OnSecurity_AnsChanged();
            }
        }
        private global::System.String _Security_Ans;
        partial void OnSecurity_AnsChanging(global::System.String value);
        partial void OnSecurity_AnsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_Login_Login", "Login1")]
        public Login Login1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Login>("HomeModel.FK_Login_Login", "Login1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Login>("HomeModel.FK_Login_Login", "Login1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Login> Login1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Login>("HomeModel.FK_Login_Login", "Login1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Login>("HomeModel.FK_Login_Login", "Login1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_Login_Login", "Login")]
        public Login Login2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Login>("HomeModel.FK_Login_Login", "Login").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Login>("HomeModel.FK_Login_Login", "Login").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Login> Login2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Login>("HomeModel.FK_Login_Login", "Login");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Login>("HomeModel.FK_Login_Login", "Login", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeModel", Name="SecurityQuestion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SecurityQuestion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SecurityQuestion object.
        /// </summary>
        /// <param name="security_Question_Id">Initial value of the Security_Question_Id property.</param>
        public static SecurityQuestion CreateSecurityQuestion(global::System.Decimal security_Question_Id)
        {
            SecurityQuestion securityQuestion = new SecurityQuestion();
            securityQuestion.Security_Question_Id = security_Question_Id;
            return securityQuestion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Security_Question_Id
        {
            get
            {
                return _Security_Question_Id;
            }
            set
            {
                if (_Security_Question_Id != value)
                {
                    OnSecurity_Question_IdChanging(value);
                    ReportPropertyChanging("Security_Question_Id");
                    _Security_Question_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Security_Question_Id");
                    OnSecurity_Question_IdChanged();
                }
            }
        }
        private global::System.Decimal _Security_Question_Id;
        partial void OnSecurity_Question_IdChanging(global::System.Decimal value);
        partial void OnSecurity_Question_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Security_Question
        {
            get
            {
                return _Security_Question;
            }
            set
            {
                OnSecurity_QuestionChanging(value);
                ReportPropertyChanging("Security_Question");
                _Security_Question = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Security_Question");
                OnSecurity_QuestionChanged();
            }
        }
        private global::System.String _Security_Question;
        partial void OnSecurity_QuestionChanging(global::System.String value);
        partial void OnSecurity_QuestionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_SecurityQuestion_Id", "SecurityQuestion1")]
        public SecurityQuestion SecurityQuestion1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityQuestion>("HomeModel.FK_SecurityQuestion_Id", "SecurityQuestion1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityQuestion>("HomeModel.FK_SecurityQuestion_Id", "SecurityQuestion1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecurityQuestion> SecurityQuestion1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityQuestion>("HomeModel.FK_SecurityQuestion_Id", "SecurityQuestion1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecurityQuestion>("HomeModel.FK_SecurityQuestion_Id", "SecurityQuestion1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_SecurityQuestion_Id", "SecurityQuestion")]
        public SecurityQuestion SecurityQuestion2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityQuestion>("HomeModel.FK_SecurityQuestion_Id", "SecurityQuestion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityQuestion>("HomeModel.FK_SecurityQuestion_Id", "SecurityQuestion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecurityQuestion> SecurityQuestion2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityQuestion>("HomeModel.FK_SecurityQuestion_Id", "SecurityQuestion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecurityQuestion>("HomeModel.FK_SecurityQuestion_Id", "SecurityQuestion", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
